2023-12-06 18:20:03.611 +03:00 [INF] User profile is available. Using 'C:\Users\Hasan_Helvali\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-06 18:20:03.975 +03:00 [INF] Now listening on: https://localhost:7113
2023-12-06 18:20:03.976 +03:00 [INF] Now listening on: http://localhost:5113
2023-12-06 18:20:03.981 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-06 18:20:03.982 +03:00 [INF] Hosting environment: Development
2023-12-06 18:20:03.983 +03:00 [INF] Content root path: C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-06 18:20:58.382 +03:00 [INF] User profile is available. Using 'C:\Users\Hasan_Helvali\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-06 18:20:58.669 +03:00 [INF] Now listening on: https://localhost:7113
2023-12-06 18:20:58.670 +03:00 [INF] Now listening on: http://localhost:5113
2023-12-06 18:20:58.674 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-06 18:20:58.676 +03:00 [INF] Hosting environment: Development
2023-12-06 18:20:58.677 +03:00 [INF] Content root path: C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-06 19:19:17.212 +03:00 [INF] User profile is available. Using 'C:\Users\Hasan_Helvali\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-06 19:19:17.513 +03:00 [INF] Now listening on: https://localhost:7113
2023-12-06 19:19:17.515 +03:00 [INF] Now listening on: http://localhost:5113
2023-12-06 19:19:17.519 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-06 19:19:17.520 +03:00 [INF] Hosting environment: Development
2023-12-06 19:19:17.521 +03:00 [INF] Content root path: C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-06 19:34:18.640 +03:00 [INF] User profile is available. Using 'C:\Users\Hasan_Helvali\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-06 19:34:18.927 +03:00 [INF] Now listening on: https://localhost:7113
2023-12-06 19:34:18.930 +03:00 [INF] Now listening on: http://localhost:5113
2023-12-06 19:34:18.936 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-06 19:34:18.938 +03:00 [INF] Hosting environment: Development
2023-12-06 19:34:18.939 +03:00 [INF] Content root path: C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-06 19:34:51.512 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/auth/google-login - -
2023-12-06 19:34:51.586 +03:00 [INF] CORS policy execution successful.
2023-12-06 19:34:51.598 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/auth/google-login - - - 204 - - 92.1769ms
2023-12-06 19:34:51.600 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7113/api/auth/google-login application/json 1485
2023-12-06 19:34:51.612 +03:00 [INF] CORS policy execution successful.
2023-12-06 19:34:51.614 +03:00 [INF] CORS policy execution successful.
2023-12-06 19:34:51.643 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-06 19:34:51.704 +03:00 [INF] Route matched with {action = "GoogleLogin", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GoogleLogin(ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandRequest) on controller ECommerceAPI.API.Controllers.AuthController (ECommerceAPI.API).
2023-12-06 19:34:54.072 +03:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'InvoiceFile'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-12-06 19:34:54.933 +03:00 [INF] Executed DbCommand (60ms) [Parameters=[@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[LoginProvider], [a].[ProviderKey], [a].[ProviderDisplayName], [a].[UserId]
FROM [AspNetUserLogins] AS [a]
WHERE [a].[LoginProvider] = @__loginProvider_0 AND [a].[ProviderKey] = @__providerKey_1
2023-12-06 19:34:55.095 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__userId_0
2023-12-06 19:34:55.175 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[LoginProvider], [a].[ProviderKey], [a].[ProviderDisplayName], [a].[UserId]
FROM [AspNetUserLogins] AS [a]
WHERE [a].[LoginProvider] = @__loginProvider_0 AND [a].[ProviderKey] = @__providerKey_1
2023-12-06 19:34:55.188 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__userId_0
2023-12-06 19:34:55.191 +03:00 [WRN] AddLogin for user failed because it was already associated with another user.
2023-12-06 19:34:55.431 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-12-06 19:34:55.631 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p17='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p18='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 4000), @p7='?' (Size = 256), @p8='?' (Size = 256), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (DbType = Boolean), @p12='?' (Size = 4000), @p13='?' (DbType = DateTime2), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NameSurname] = @p6, [NormalizedEmail] = @p7, [NormalizedUserName] = @p8, [PasswordHash] = @p9, [PhoneNumber] = @p10, [PhoneNumberConfirmed] = @p11, [RefreshToken] = @p12, [RefreshTokenEndDate] = @p13, [SecurityStamp] = @p14, [TwoFactorEnabled] = @p15, [UserName] = @p16
OUTPUT 1
WHERE [Id] = @p17 AND [ConcurrencyStamp] = @p18;
2023-12-06 19:34:55.676 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandResponse'.
2023-12-06 19:34:55.734 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API) in 4020.6889ms
2023-12-06 19:34:55.737 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-06 19:34:55.745 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7113/api/auth/google-login application/json 1485 - 200 - application/json;+charset=utf-8 4144.8195ms
2023-12-06 19:40:02.313 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/auth/google-login - -
2023-12-06 19:40:02.322 +03:00 [INF] CORS policy execution successful.
2023-12-06 19:40:02.324 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/auth/google-login - - - 204 - - 12.8443ms
2023-12-06 19:40:02.330 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7113/api/auth/google-login application/json 1485
2023-12-06 19:40:02.332 +03:00 [INF] CORS policy execution successful.
2023-12-06 19:40:02.333 +03:00 [INF] CORS policy execution successful.
2023-12-06 19:40:02.334 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-06 19:40:02.335 +03:00 [INF] Route matched with {action = "GoogleLogin", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GoogleLogin(ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandRequest) on controller ECommerceAPI.API.Controllers.AuthController (ECommerceAPI.API).
2023-12-06 19:40:02.344 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[LoginProvider], [a].[ProviderKey], [a].[ProviderDisplayName], [a].[UserId]
FROM [AspNetUserLogins] AS [a]
WHERE [a].[LoginProvider] = @__loginProvider_0 AND [a].[ProviderKey] = @__providerKey_1
2023-12-06 19:40:02.352 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__userId_0
2023-12-06 19:40:02.355 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[LoginProvider], [a].[ProviderKey], [a].[ProviderDisplayName], [a].[UserId]
FROM [AspNetUserLogins] AS [a]
WHERE [a].[LoginProvider] = @__loginProvider_0 AND [a].[ProviderKey] = @__providerKey_1
2023-12-06 19:40:02.358 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__userId_0
2023-12-06 19:40:02.362 +03:00 [WRN] AddLogin for user failed because it was already associated with another user.
2023-12-06 19:40:02.368 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-12-06 19:40:02.376 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p17='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p18='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 4000), @p7='?' (Size = 256), @p8='?' (Size = 256), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (DbType = Boolean), @p12='?' (Size = 4000), @p13='?' (DbType = DateTime2), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NameSurname] = @p6, [NormalizedEmail] = @p7, [NormalizedUserName] = @p8, [PasswordHash] = @p9, [PhoneNumber] = @p10, [PhoneNumberConfirmed] = @p11, [RefreshToken] = @p12, [RefreshTokenEndDate] = @p13, [SecurityStamp] = @p14, [TwoFactorEnabled] = @p15, [UserName] = @p16
OUTPUT 1
WHERE [Id] = @p17 AND [ConcurrencyStamp] = @p18;
2023-12-06 19:40:02.383 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandResponse'.
2023-12-06 19:40:02.386 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API) in 48.6711ms
2023-12-06 19:40:02.389 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-06 19:40:02.396 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7113/api/auth/google-login application/json 1485 - 200 - application/json;+charset=utf-8 65.8301ms
2023-12-06 19:40:06.844 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/auth/google-login - -
2023-12-06 19:40:06.846 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/auth/google-login - -
2023-12-06 19:40:06.847 +03:00 [INF] CORS policy execution successful.
2023-12-06 19:40:06.849 +03:00 [INF] CORS policy execution successful.
2023-12-06 19:40:06.850 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/auth/google-login - - - 204 - - 7.2485ms
2023-12-06 19:40:06.851 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/auth/google-login - - - 204 - - 5.9279ms
2023-12-06 19:40:06.852 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7113/api/auth/google-login application/json 1485
2023-12-06 19:40:06.853 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7113/api/auth/google-login application/json 1485
2023-12-06 19:40:06.854 +03:00 [INF] CORS policy execution successful.
2023-12-06 19:40:06.855 +03:00 [INF] CORS policy execution successful.
2023-12-06 19:40:06.856 +03:00 [INF] CORS policy execution successful.
2023-12-06 19:40:06.857 +03:00 [INF] CORS policy execution successful.
2023-12-06 19:40:06.862 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-06 19:40:06.862 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-06 19:40:06.863 +03:00 [INF] Route matched with {action = "GoogleLogin", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GoogleLogin(ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandRequest) on controller ECommerceAPI.API.Controllers.AuthController (ECommerceAPI.API).
2023-12-06 19:40:06.864 +03:00 [INF] Route matched with {action = "GoogleLogin", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GoogleLogin(ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandRequest) on controller ECommerceAPI.API.Controllers.AuthController (ECommerceAPI.API).
2023-12-06 19:40:06.888 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[LoginProvider], [a].[ProviderKey], [a].[ProviderDisplayName], [a].[UserId]
FROM [AspNetUserLogins] AS [a]
WHERE [a].[LoginProvider] = @__loginProvider_0 AND [a].[ProviderKey] = @__providerKey_1
2023-12-06 19:40:06.903 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__userId_0
2023-12-06 19:40:06.911 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[LoginProvider], [a].[ProviderKey], [a].[ProviderDisplayName], [a].[UserId]
FROM [AspNetUserLogins] AS [a]
WHERE [a].[LoginProvider] = @__loginProvider_0 AND [a].[ProviderKey] = @__providerKey_1
2023-12-06 19:40:06.915 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__userId_0
2023-12-06 19:40:06.917 +03:00 [WRN] AddLogin for user failed because it was already associated with another user.
2023-12-06 19:40:06.919 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-12-06 19:40:06.926 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p17='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p18='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 4000), @p7='?' (Size = 256), @p8='?' (Size = 256), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (DbType = Boolean), @p12='?' (Size = 4000), @p13='?' (DbType = DateTime2), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NameSurname] = @p6, [NormalizedEmail] = @p7, [NormalizedUserName] = @p8, [PasswordHash] = @p9, [PhoneNumber] = @p10, [PhoneNumberConfirmed] = @p11, [RefreshToken] = @p12, [RefreshTokenEndDate] = @p13, [SecurityStamp] = @p14, [TwoFactorEnabled] = @p15, [UserName] = @p16
OUTPUT 1
WHERE [Id] = @p17 AND [ConcurrencyStamp] = @p18;
2023-12-06 19:40:06.932 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandResponse'.
2023-12-06 19:40:06.934 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API) in 66.0857ms
2023-12-06 19:40:06.937 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-06 19:40:06.948 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7113/api/auth/google-login application/json 1485 - 200 - application/json;+charset=utf-8 95.1851ms
2023-12-06 19:40:06.967 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'ECommerceAPI.Persistance.Contexts.ECommerceAPI_DBContext'.
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2023-12-06 19:40:07.194 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API) in 327.1925ms
2023-12-06 19:40:07.196 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-06 19:40:07.224 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByLoginAsync(String loginProvider, String providerKey, CancellationToken cancellationToken)
   at ECommerceAPI.Persistance.Services.AuthService.GoogleLoginAsync(String idToken, Int32 accessTokenLifeTime) in C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Infrastructure\ECommerceAPI.Persistance\Services\AuthService.cs:line 50
   at ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandHandler.Handle(GoogleLoginCommandRequest request, CancellationToken cancellationToken) in C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Core\ECommerceAPI.Application\Features\Commands\AppUser\GoogleLogin\GoogleLoginCommandHandler.cs:line 26
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at ECommerceAPI.API.Controllers.AuthController.GoogleLogin(GoogleLoginCommandRequest googleLoginCommandRequest) in C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Presentation\ECommerceAPI.API\Controllers\AuthController.cs:line 36
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_5>d.MoveNext() in C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Presentation\ECommerceAPI.API\Program.cs:line 107
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-12-06 19:40:07.277 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7113/api/auth/google-login application/json 1485 - 500 - text/plain;+charset=utf-8 425.1406ms
2023-12-06 20:08:43.879 +03:00 [INF] User profile is available. Using 'C:\Users\Hasan_Helvali\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-06 20:08:44.482 +03:00 [INF] Now listening on: https://localhost:7113
2023-12-06 20:08:44.484 +03:00 [INF] Now listening on: http://localhost:5113
2023-12-06 20:08:44.491 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-06 20:08:44.494 +03:00 [INF] Hosting environment: Development
2023-12-06 20:08:44.495 +03:00 [INF] Content root path: C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-06 20:08:49.006 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/auth/google-login - -
2023-12-06 20:08:49.077 +03:00 [INF] CORS policy execution successful.
2023-12-06 20:08:49.091 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/auth/google-login - - - 204 - - 92.4513ms
2023-12-06 20:08:49.094 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7113/api/auth/google-login application/json 1485
2023-12-06 20:08:49.108 +03:00 [INF] CORS policy execution successful.
2023-12-06 20:08:49.111 +03:00 [INF] CORS policy execution successful.
2023-12-06 20:08:49.136 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-06 20:08:49.194 +03:00 [INF] Route matched with {action = "GoogleLogin", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GoogleLogin(ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandRequest) on controller ECommerceAPI.API.Controllers.AuthController (ECommerceAPI.API).
2023-12-06 20:08:51.093 +03:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'InvoiceFile'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-12-06 20:08:51.931 +03:00 [INF] Executed DbCommand (59ms) [Parameters=[@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[LoginProvider], [a].[ProviderKey], [a].[ProviderDisplayName], [a].[UserId]
FROM [AspNetUserLogins] AS [a]
WHERE [a].[LoginProvider] = @__loginProvider_0 AND [a].[ProviderKey] = @__providerKey_1
2023-12-06 20:08:52.116 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__userId_0
2023-12-06 20:08:52.190 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[LoginProvider], [a].[ProviderKey], [a].[ProviderDisplayName], [a].[UserId]
FROM [AspNetUserLogins] AS [a]
WHERE [a].[LoginProvider] = @__loginProvider_0 AND [a].[ProviderKey] = @__providerKey_1
2023-12-06 20:08:52.195 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__userId_0
2023-12-06 20:08:52.198 +03:00 [WRN] AddLogin for user failed because it was already associated with another user.
2023-12-06 20:08:52.402 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-12-06 20:08:52.572 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p17='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p18='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 4000), @p7='?' (Size = 256), @p8='?' (Size = 256), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (DbType = Boolean), @p12='?' (Size = 4000), @p13='?' (DbType = DateTime2), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NameSurname] = @p6, [NormalizedEmail] = @p7, [NormalizedUserName] = @p8, [PasswordHash] = @p9, [PhoneNumber] = @p10, [PhoneNumberConfirmed] = @p11, [RefreshToken] = @p12, [RefreshTokenEndDate] = @p13, [SecurityStamp] = @p14, [TwoFactorEnabled] = @p15, [UserName] = @p16
OUTPUT 1
WHERE [Id] = @p17 AND [ConcurrencyStamp] = @p18;
2023-12-06 20:08:52.625 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandResponse'.
2023-12-06 20:08:52.683 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API) in 3478.6752ms
2023-12-06 20:08:52.687 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-06 20:08:52.694 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7113/api/auth/google-login application/json 1485 - 200 - application/json;+charset=utf-8 3599.9211ms
2023-12-06 20:08:55.546 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - -
2023-12-06 20:08:55.548 +03:00 [INF] CORS policy execution successful.
2023-12-06 20:08:55.549 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - - - 204 - - 3.0311ms
2023-12-06 20:08:55.551 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - -
2023-12-06 20:08:55.552 +03:00 [INF] CORS policy execution successful.
2023-12-06 20:08:55.553 +03:00 [INF] CORS policy execution successful.
2023-12-06 20:08:55.697 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-06 20:08:55.706 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-06 20:08:55.728 +03:00 [INF] Get All Products
2023-12-06 20:08:55.809 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-06 20:08:55.840 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-06 20:08:55.842 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-06 20:08:55.863 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[Name], [p].[Price], [p].[Stock], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-06 20:08:55.874 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-06 20:08:55.928 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 219.1778ms
2023-12-06 20:08:55.930 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-06 20:08:55.933 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 381.3412ms
2023-12-06 20:12:47.545 +03:00 [INF] User profile is available. Using 'C:\Users\Hasan_Helvali\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-06 20:12:47.900 +03:00 [INF] Now listening on: https://localhost:7113
2023-12-06 20:12:47.901 +03:00 [INF] Now listening on: http://localhost:5113
2023-12-06 20:12:47.908 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-06 20:12:47.909 +03:00 [INF] Hosting environment: Development
2023-12-06 20:12:47.910 +03:00 [INF] Content root path: C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-06 20:24:39.966 +03:00 [INF] User profile is available. Using 'C:\Users\Hasan_Helvali\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-06 20:24:40.358 +03:00 [INF] Now listening on: https://localhost:7113
2023-12-06 20:24:40.359 +03:00 [INF] Now listening on: http://localhost:5113
2023-12-06 20:24:40.364 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-06 20:24:40.366 +03:00 [INF] Hosting environment: Development
2023-12-06 20:24:40.367 +03:00 [INF] Content root path: C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-06 20:25:39.167 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/auth/google-login - -
2023-12-06 20:25:39.233 +03:00 [INF] CORS policy execution successful.
2023-12-06 20:25:39.255 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/auth/google-login - - - 204 - - 93.0611ms
2023-12-06 20:25:39.256 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7113/api/auth/google-login application/json 1485
2023-12-06 20:25:39.273 +03:00 [INF] CORS policy execution successful.
2023-12-06 20:25:39.288 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/google-login
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 1485
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-06 20:25:39.292 +03:00 [INF] CORS policy execution successful.
2023-12-06 20:25:39.332 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-06 20:25:39.386 +03:00 [INF] Route matched with {action = "GoogleLogin", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GoogleLogin(ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandRequest) on controller ECommerceAPI.API.Controllers.AuthController (ECommerceAPI.API).
2023-12-06 20:25:39.427 +03:00 [INF] RequestBody: {"idToken":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImU0YWRmYjQzNmI5ZTE5N2UyZTExMDZhZjJjODQyMjg0ZTQ5ODZhZmYiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiI5NTg0Nzk2MDI1NzUtdjZqNTRybmFnNWtoczM0Y21nZmdwZjJxM2t1bHBudjguYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJhdWQiOiI5NTg0Nzk2MDI1NzUtdjZqNTRybmFnNWtoczM0Y21nZmdwZjJxM2t1bHBudjguYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJzdWIiOiIxMDI2NDk1NDY0NzEzODg5NjM2ODIiLCJlbWFpbCI6Imhhc2FuLmhlbHZhbGkuZ2l0QGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYmYiOjE3MDE4ODIyMjcsIm5hbWUiOiJIYXNhbiBIZWx2YWzEsSIsInBpY3R1cmUiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQ2c4b2NMVS01MjRhNWJrSnY0dWVwb1NfVTVhVlRoeFY3RFRrZzUwNVQ2QXNyYUs9czk2LWMiLCJnaXZlbl9uYW1lIjoiSGFzYW4iLCJmYW1pbHlfbmFtZSI6IkhlbHZhbMSxIiwibG9jYWxlIjoidHIiLCJpYXQiOjE3MDE4ODI1MjcsImV4cCI6MTcwMTg4NjEyNywianRpIjoiNDdhYWU4NjQ2OGQ2ZGRmODgzMmZiNjE5YjJkMTFmYThkOWUwZTUwNSJ9.MKJInzVx2Y7ujsx-3NhUnr0MhwpbI1Hdzd2oEH6ZX1mdlHVhFbo99Hn7ewDKvy5oNUsUzZpyMVNLLWakzbXLFnN5azrCoF88-hBXfXu3nuor4FIYNnLdbc7i_UnEWP-Z1dh2Mnfs1w1ruOK2_DB0004Dy5Xw-hnpD3EfBQkmsTP-jzMFqXvnPbPOJqKgJROw61h8LmJpbl3pM3GMTa_8jHiQ7Pi7JvKI1ZHlo6DCSD0X8pB8oDGk8nCBC9rIolcAhyWZz4a7Pj43sBL2QvfloPAJ-aSVlYYQi9wPc7tEI4iG1Sbk2FGk-uY6YZUZyzPznWIPlSIIdVP_HHffoiQAeQ","id":"102649546471388963682","name":"Hasan Helvalı","email":"hasan.helvali.git@gmail.com","photoUrl":"https://lh3.googleusercontent.com/a/ACg8ocLU-524a5bkJv4uepoS_U5aVThxV7DTkg505T6AsraK=s96-c","firstName":"Hasan","lastName":"Helvalı","provider":"GOOGLE"}
2023-12-06 20:25:41.241 +03:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'InvoiceFile'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-12-06 20:25:42.079 +03:00 [INF] Executed DbCommand (65ms) [Parameters=[@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[LoginProvider], [a].[ProviderKey], [a].[ProviderDisplayName], [a].[UserId]
FROM [AspNetUserLogins] AS [a]
WHERE [a].[LoginProvider] = @__loginProvider_0 AND [a].[ProviderKey] = @__providerKey_1
2023-12-06 20:25:42.239 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__userId_0
2023-12-06 20:25:42.315 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[LoginProvider], [a].[ProviderKey], [a].[ProviderDisplayName], [a].[UserId]
FROM [AspNetUserLogins] AS [a]
WHERE [a].[LoginProvider] = @__loginProvider_0 AND [a].[ProviderKey] = @__providerKey_1
2023-12-06 20:25:42.320 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__userId_0
2023-12-06 20:25:42.324 +03:00 [WRN] AddLogin for user failed because it was already associated with another user.
2023-12-06 20:25:42.499 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-12-06 20:25:42.666 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p17='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p18='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 4000), @p7='?' (Size = 256), @p8='?' (Size = 256), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (DbType = Boolean), @p12='?' (Size = 4000), @p13='?' (DbType = DateTime2), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NameSurname] = @p6, [NormalizedEmail] = @p7, [NormalizedUserName] = @p8, [PasswordHash] = @p9, [PhoneNumber] = @p10, [PhoneNumberConfirmed] = @p11, [RefreshToken] = @p12, [RefreshTokenEndDate] = @p13, [SecurityStamp] = @p14, [TwoFactorEnabled] = @p15, [UserName] = @p16
OUTPUT 1
WHERE [Id] = @p17 AND [ConcurrencyStamp] = @p18;
2023-12-06 20:25:42.714 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandResponse'.
2023-12-06 20:25:42.753 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-06 20:25:42.765 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API) in 3370.5227ms
2023-12-06 20:25:42.768 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-06 20:25:42.772 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiaGFzYW5IZWx2YWxpIiwibmJmIjoxNzAxODgzNTQyLCJleHAiOjE3MDE4ODM1NTcsImlzcyI6Ind3dy5teWFwaS5jb20iLCJhdWQiOiJ3d3cuYmlsbWVtbmUuY29tIn0.xqP1V4vxihKE-IzmL06tSEMi71bFismrSehpI9kM3UA","expiration":"2023-12-06T17:25:57.356902Z","refreshToken":"odrrkwVfaokdU80p5Lf39cnx6xhS8caQbzgNNaVkXio="}}
2023-12-06 20:25:42.780 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7113/api/auth/google-login application/json 1485 - 200 - application/json;+charset=utf-8 3524.7731ms
2023-12-06 20:25:45.933 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - -
2023-12-06 20:25:45.934 +03:00 [INF] CORS policy execution successful.
2023-12-06 20:25:45.936 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - - - 204 - - 3.4547ms
2023-12-06 20:25:45.938 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - -
2023-12-06 20:25:45.940 +03:00 [INF] CORS policy execution successful.
2023-12-06 20:25:45.941 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-06 20:25:45.942 +03:00 [INF] CORS policy execution successful.
2023-12-06 20:25:46.086 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-06 20:25:46.094 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-06 20:25:46.113 +03:00 [INF] Get All Products
2023-12-06 20:25:46.202 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-06 20:25:46.228 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-06 20:25:46.230 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-06 20:25:46.251 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[Name], [p].[Price], [p].[Stock], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-06 20:25:46.260 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-06 20:25:46.300 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-06 20:25:46.303 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 206.2117ms
2023-12-06 20:25:46.305 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-06 20:25:46.305 +03:00 [INF] ResponseBody: {"totalCount":5,"products":[{"id":"31ac1fe1-40e8-4da0-8e77-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:35.9224475","updatedDate":"0001-01-01T00:00:00"},{"id":"6b454482-a7f5-4df1-8e78-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.0197401","updatedDate":"0001-01-01T00:00:00"},{"id":"5ef46363-6c22-4afa-8e79-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.5511597","updatedDate":"0001-01-01T00:00:00"},{"id":"7b800c27-ee91-4f6f-8e7a-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:39.0484291","updatedDate":"0001-01-01T00:00:00"},{"id":"907e1c37-3e28-40f4-8e7b-08dbf29605be","name":"dbkjvkaj a","price":6516,"stock":5546,"createdDate":"2023-12-01T21:01:53.9948844","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-06 20:25:46.306 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 368.1933ms
2023-12-07 13:46:59.661 +03:00 [INF] User profile is available. Using 'C:\Users\Hasan_Helvali\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-07 13:47:00.044 +03:00 [INF] Now listening on: https://localhost:7113
2023-12-07 13:47:00.045 +03:00 [INF] Now listening on: http://localhost:5113
2023-12-07 13:47:00.053 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-07 13:47:00.055 +03:00 [INF] Hosting environment: Development
2023-12-07 13:47:00.056 +03:00 [INF] Content root path: C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-07 16:35:50.107 +03:00 [INF] User profile is available. Using 'C:\Users\Hasan_Helvali\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-07 16:35:50.394 +03:00 [INF] Now listening on: https://localhost:7113
2023-12-07 16:35:50.395 +03:00 [INF] Now listening on: http://localhost:5113
2023-12-07 16:35:50.401 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-07 16:35:50.402 +03:00 [INF] Hosting environment: Development
2023-12-07 16:35:50.403 +03:00 [INF] Content root path: C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-07 16:36:49.045 +03:00 [INF] User profile is available. Using 'C:\Users\Hasan_Helvali\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-07 16:36:49.327 +03:00 [INF] Now listening on: https://localhost:7113
2023-12-07 16:36:49.329 +03:00 [INF] Now listening on: http://localhost:5113
2023-12-07 16:36:49.333 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-07 16:36:49.335 +03:00 [INF] Hosting environment: Development
2023-12-07 16:36:49.336 +03:00 [INF] Content root path: C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-07 16:37:54.561 +03:00 [INF] User profile is available. Using 'C:\Users\Hasan_Helvali\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-07 16:37:54.886 +03:00 [INF] Now listening on: https://localhost:7113
2023-12-07 16:37:54.887 +03:00 [INF] Now listening on: http://localhost:5113
2023-12-07 16:37:54.891 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-07 16:37:54.892 +03:00 [INF] Hosting environment: Development
2023-12-07 16:37:54.893 +03:00 [INF] Content root path: C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-07 16:39:08.121 +03:00 [INF] User profile is available. Using 'C:\Users\Hasan_Helvali\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-07 16:39:08.420 +03:00 [INF] Now listening on: https://localhost:7113
2023-12-07 16:39:08.422 +03:00 [INF] Now listening on: http://localhost:5113
2023-12-07 16:39:08.426 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-07 16:39:08.428 +03:00 [INF] Hosting environment: Development
2023-12-07 16:39:08.428 +03:00 [INF] Content root path: C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-07 16:41:36.720 +03:00 [INF] User profile is available. Using 'C:\Users\Hasan_Helvali\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-07 16:41:37.036 +03:00 [INF] Now listening on: https://localhost:7113
2023-12-07 16:41:37.038 +03:00 [INF] Now listening on: http://localhost:5113
2023-12-07 16:41:37.043 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-07 16:41:37.044 +03:00 [INF] Hosting environment: Development
2023-12-07 16:41:37.045 +03:00 [INF] Content root path: C:\Users\Hasan_Helvali\Desktop\E-Commerce\ECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-07 16:42:11.627 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/auth/google-login - -
2023-12-07 16:42:11.719 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:42:11.742 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/auth/google-login - - - 204 - - 120.1009ms
2023-12-07 16:42:11.745 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7113/api/auth/google-login application/json 1485
2023-12-07 16:42:11.763 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:42:11.776 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/google-login
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 1485
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-07 16:42:11.778 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:42:11.806 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-07 16:42:11.865 +03:00 [INF] Route matched with {action = "GoogleLogin", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GoogleLogin(ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandRequest) on controller ECommerceAPI.API.Controllers.AuthController (ECommerceAPI.API).
2023-12-07 16:42:11.906 +03:00 [INF] RequestBody: {"idToken":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImU0YWRmYjQzNmI5ZTE5N2UyZTExMDZhZjJjODQyMjg0ZTQ5ODZhZmYiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiI5NTg0Nzk2MDI1NzUtdjZqNTRybmFnNWtoczM0Y21nZmdwZjJxM2t1bHBudjguYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJhdWQiOiI5NTg0Nzk2MDI1NzUtdjZqNTRybmFnNWtoczM0Y21nZmdwZjJxM2t1bHBudjguYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJzdWIiOiIxMDI2NDk1NDY0NzEzODg5NjM2ODIiLCJlbWFpbCI6Imhhc2FuLmhlbHZhbGkuZ2l0QGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYmYiOjE3MDE5NTYyMzIsIm5hbWUiOiJIYXNhbiBIZWx2YWzEsSIsInBpY3R1cmUiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQ2c4b2NMVS01MjRhNWJrSnY0dWVwb1NfVTVhVlRoeFY3RFRrZzUwNVQ2QXNyYUs9czk2LWMiLCJnaXZlbl9uYW1lIjoiSGFzYW4iLCJmYW1pbHlfbmFtZSI6IkhlbHZhbMSxIiwibG9jYWxlIjoidHIiLCJpYXQiOjE3MDE5NTY1MzIsImV4cCI6MTcwMTk2MDEzMiwianRpIjoiZWQwMjY2YTQ1NjJkNzliNjNiMGFjMTk3N2MzODBiZGFiNTQ0MjlmMyJ9.F7ilNUH-j7DWZen-UU56-NhGu6b7UL0Kf2kg3ibC-lSLRXlhfSIGNrQJP3B4aGbwdOP-HVKo2HiPP7bVzcTsR7_2CDLm5jF1sNpcULn__dXS7usWGNhrZyVuBt6yZWbd6JVeqlKJUfSZsB29Xel1lMnYCfFnKPEOwjZGHPYyrcVeSybWB67rEcZRuV79ow_BLybzPp24slH41Bhm5uAAHTuxmbPZ7r5RdXDPET_8fJdMLBZc7Rmmyp0bWfzjBtUwW0q4bNtO_zSvbEmsALCbixQ1uODHutAWIepz6hcMyfenFuBIpRkUMrdykmS_7BqwF7LYkNrcQZQAaRtYoOTyTA","id":"102649546471388963682","name":"Hasan Helvalı","email":"hasan.helvali.git@gmail.com","photoUrl":"https://lh3.googleusercontent.com/a/ACg8ocLU-524a5bkJv4uepoS_U5aVThxV7DTkg505T6AsraK=s96-c","firstName":"Hasan","lastName":"Helvalı","provider":"GOOGLE"}
2023-12-07 16:42:14.007 +03:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'InvoiceFile'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-12-07 16:42:14.881 +03:00 [INF] Executed DbCommand (61ms) [Parameters=[@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[LoginProvider], [a].[ProviderKey], [a].[ProviderDisplayName], [a].[UserId]
FROM [AspNetUserLogins] AS [a]
WHERE [a].[LoginProvider] = @__loginProvider_0 AND [a].[ProviderKey] = @__providerKey_1
2023-12-07 16:42:15.051 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__userId_0
2023-12-07 16:42:15.122 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[LoginProvider], [a].[ProviderKey], [a].[ProviderDisplayName], [a].[UserId]
FROM [AspNetUserLogins] AS [a]
WHERE [a].[LoginProvider] = @__loginProvider_0 AND [a].[ProviderKey] = @__providerKey_1
2023-12-07 16:42:15.128 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__userId_0
2023-12-07 16:42:15.132 +03:00 [WRN] AddLogin for user failed because it was already associated with another user.
2023-12-07 16:42:15.334 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-12-07 16:42:15.548 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p17='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p18='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 4000), @p7='?' (Size = 256), @p8='?' (Size = 256), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (DbType = Boolean), @p12='?' (Size = 4000), @p13='?' (DbType = DateTime2), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NameSurname] = @p6, [NormalizedEmail] = @p7, [NormalizedUserName] = @p8, [PasswordHash] = @p9, [PhoneNumber] = @p10, [PhoneNumberConfirmed] = @p11, [RefreshToken] = @p12, [RefreshTokenEndDate] = @p13, [SecurityStamp] = @p14, [TwoFactorEnabled] = @p15, [UserName] = @p16
OUTPUT 1
WHERE [Id] = @p17 AND [ConcurrencyStamp] = @p18;
2023-12-07 16:42:15.594 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandResponse'.
2023-12-07 16:42:15.659 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-07 16:42:15.679 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API) in 3801.7797ms
2023-12-07 16:42:15.684 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-07 16:42:15.690 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiaGFzYW5IZWx2YWxpIiwibmJmIjoxNzAxOTU2NTM1LCJleHAiOjE3MDE5NTc0MzUsImlzcyI6Ind3dy5teWFwaS5jb20iLCJhdWQiOiJ3d3cuYmlsbWVtbmUuY29tIn0.jmGTxQ2aYfXWDmanWKHJVPGjpjXR6IOZxw-0XHfc4iI","expiration":"2023-12-07T13:57:15.1796962Z","refreshToken":"kBhVRbZul2bSPQdkaw1dAQsKWf8MCK4jwAqNM/HmpgA="}}
2023-12-07 16:42:15.706 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7113/api/auth/google-login application/json 1485 - 200 - application/json;+charset=utf-8 3960.7312ms
2023-12-07 16:42:24.569 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:42:24.571 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:42:24.572 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - - - 204 - - 3.0336ms
2023-12-07 16:42:24.580 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:42:24.582 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:42:24.583 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-07 16:42:24.586 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:42:24.736 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:42:24.744 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-07 16:42:24.766 +03:00 [INF] Get All Products
2023-12-07 16:42:24.853 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-07 16:42:24.883 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-07 16:42:24.885 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-07 16:42:24.905 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[Name], [p].[Price], [p].[Stock], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-07 16:42:24.915 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-07 16:42:24.963 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-07 16:42:24.965 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 218.0936ms
2023-12-07 16:42:24.967 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:42:24.968 +03:00 [INF] ResponseBody: {"totalCount":5,"products":[{"id":"31ac1fe1-40e8-4da0-8e77-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:35.9224475","updatedDate":"0001-01-01T00:00:00"},{"id":"6b454482-a7f5-4df1-8e78-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.0197401","updatedDate":"0001-01-01T00:00:00"},{"id":"5ef46363-6c22-4afa-8e79-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.5511597","updatedDate":"0001-01-01T00:00:00"},{"id":"7b800c27-ee91-4f6f-8e7a-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:39.0484291","updatedDate":"0001-01-01T00:00:00"},{"id":"907e1c37-3e28-40f4-8e7b-08dbf29605be","name":"dbkjvkaj a","price":6516,"stock":5546,"createdDate":"2023-12-01T21:01:53.9948844","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-07 16:42:24.969 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 389.0926ms
2023-12-07 16:43:48.760 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:43:48.778 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:43:48.779 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - - - 204 - - 18.5436ms
2023-12-07 16:43:48.785 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:43:48.787 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:43:48.788 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-07 16:43:48.791 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:43:48.796 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:43:48.798 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-07 16:43:48.801 +03:00 [INF] Get All Products
2023-12-07 16:43:48.809 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-07 16:43:48.815 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[Name], [p].[Price], [p].[Stock], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-07 16:43:48.817 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-07 16:43:48.819 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-07 16:43:48.820 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 20.7033ms
2023-12-07 16:43:48.822 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:43:48.823 +03:00 [INF] ResponseBody: {"totalCount":5,"products":[{"id":"31ac1fe1-40e8-4da0-8e77-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:35.9224475","updatedDate":"0001-01-01T00:00:00"},{"id":"6b454482-a7f5-4df1-8e78-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.0197401","updatedDate":"0001-01-01T00:00:00"},{"id":"5ef46363-6c22-4afa-8e79-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.5511597","updatedDate":"0001-01-01T00:00:00"},{"id":"7b800c27-ee91-4f6f-8e7a-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:39.0484291","updatedDate":"0001-01-01T00:00:00"},{"id":"907e1c37-3e28-40f4-8e7b-08dbf29605be","name":"dbkjvkaj a","price":6516,"stock":5546,"createdDate":"2023-12-01T21:01:53.9948844","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-07 16:43:48.825 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 39.6940ms
2023-12-07 16:43:52.716 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:43:52.718 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:43:52.719 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-07 16:43:52.720 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:43:52.722 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:43:52.723 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-07 16:43:52.726 +03:00 [INF] Get All Products
2023-12-07 16:43:52.729 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-07 16:43:52.732 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[Name], [p].[Price], [p].[Stock], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-07 16:43:52.734 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-07 16:43:52.735 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-07 16:43:52.736 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 11.8986ms
2023-12-07 16:43:52.739 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:43:52.740 +03:00 [INF] ResponseBody: {"totalCount":5,"products":[{"id":"31ac1fe1-40e8-4da0-8e77-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:35.9224475","updatedDate":"0001-01-01T00:00:00"},{"id":"6b454482-a7f5-4df1-8e78-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.0197401","updatedDate":"0001-01-01T00:00:00"},{"id":"5ef46363-6c22-4afa-8e79-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.5511597","updatedDate":"0001-01-01T00:00:00"},{"id":"7b800c27-ee91-4f6f-8e7a-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:39.0484291","updatedDate":"0001-01-01T00:00:00"},{"id":"907e1c37-3e28-40f4-8e7b-08dbf29605be","name":"dbkjvkaj a","price":6516,"stock":5546,"createdDate":"2023-12-01T21:01:53.9948844","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-07 16:43:52.742 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 25.3085ms
2023-12-07 16:44:38.862 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:44:38.870 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:44:38.871 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - - - 204 - - 9.0567ms
2023-12-07 16:44:38.877 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:44:38.878 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:44:38.878 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-07 16:44:38.880 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:44:38.881 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:44:38.882 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-07 16:44:38.884 +03:00 [INF] Get All Products
2023-12-07 16:44:38.886 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-07 16:44:38.891 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[Name], [p].[Price], [p].[Stock], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-07 16:44:38.894 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-07 16:44:38.895 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-07 16:44:38.897 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 13.1231ms
2023-12-07 16:44:38.898 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:44:38.899 +03:00 [INF] ResponseBody: {"totalCount":5,"products":[{"id":"31ac1fe1-40e8-4da0-8e77-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:35.9224475","updatedDate":"0001-01-01T00:00:00"},{"id":"6b454482-a7f5-4df1-8e78-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.0197401","updatedDate":"0001-01-01T00:00:00"},{"id":"5ef46363-6c22-4afa-8e79-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.5511597","updatedDate":"0001-01-01T00:00:00"},{"id":"7b800c27-ee91-4f6f-8e7a-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:39.0484291","updatedDate":"0001-01-01T00:00:00"},{"id":"907e1c37-3e28-40f4-8e7b-08dbf29605be","name":"dbkjvkaj a","price":6516,"stock":5546,"createdDate":"2023-12-01T21:01:53.9948844","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-07 16:44:38.900 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 23.9045ms
2023-12-07 16:44:40.728 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:44:40.729 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:44:40.731 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-07 16:44:40.735 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:44:40.737 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:44:40.738 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-07 16:44:40.744 +03:00 [INF] Get All Products
2023-12-07 16:44:40.747 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-07 16:44:40.752 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[Name], [p].[Price], [p].[Stock], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-07 16:44:40.758 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-07 16:44:40.759 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-07 16:44:40.761 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 17.6ms
2023-12-07 16:44:40.762 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:44:40.763 +03:00 [INF] ResponseBody: {"totalCount":5,"products":[{"id":"31ac1fe1-40e8-4da0-8e77-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:35.9224475","updatedDate":"0001-01-01T00:00:00"},{"id":"6b454482-a7f5-4df1-8e78-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.0197401","updatedDate":"0001-01-01T00:00:00"},{"id":"5ef46363-6c22-4afa-8e79-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.5511597","updatedDate":"0001-01-01T00:00:00"},{"id":"7b800c27-ee91-4f6f-8e7a-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:39.0484291","updatedDate":"0001-01-01T00:00:00"},{"id":"907e1c37-3e28-40f4-8e7b-08dbf29605be","name":"dbkjvkaj a","price":6516,"stock":5546,"createdDate":"2023-12-01T21:01:53.9948844","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-07 16:44:40.765 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 36.3823ms
2023-12-07 16:46:16.162 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:46:16.172 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:46:16.178 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - - - 204 - - 16.3800ms
2023-12-07 16:46:16.184 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:46:16.185 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:46:16.187 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-07 16:46:16.189 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:46:16.191 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:46:16.193 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-07 16:46:16.195 +03:00 [INF] Get All Products
2023-12-07 16:46:16.203 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-07 16:46:16.208 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[Name], [p].[Price], [p].[Stock], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-07 16:46:16.210 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-07 16:46:16.212 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-07 16:46:16.214 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 19.3068ms
2023-12-07 16:46:16.217 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:46:16.218 +03:00 [INF] ResponseBody: {"totalCount":5,"products":[{"id":"31ac1fe1-40e8-4da0-8e77-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:35.9224475","updatedDate":"0001-01-01T00:00:00"},{"id":"6b454482-a7f5-4df1-8e78-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.0197401","updatedDate":"0001-01-01T00:00:00"},{"id":"5ef46363-6c22-4afa-8e79-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.5511597","updatedDate":"0001-01-01T00:00:00"},{"id":"7b800c27-ee91-4f6f-8e7a-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:39.0484291","updatedDate":"0001-01-01T00:00:00"},{"id":"907e1c37-3e28-40f4-8e7b-08dbf29605be","name":"dbkjvkaj a","price":6516,"stock":5546,"createdDate":"2023-12-01T21:01:53.9948844","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-07 16:46:16.220 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 36.5186ms
2023-12-07 16:51:24.288 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:51:24.299 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:51:24.300 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - - - 204 - - 11.8704ms
2023-12-07 16:51:24.312 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:51:24.320 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:51:24.321 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-07 16:51:24.323 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:51:24.325 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:51:24.331 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-07 16:51:24.334 +03:00 [INF] Get All Products
2023-12-07 16:51:24.364 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-07 16:51:24.371 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[Name], [p].[Price], [p].[Stock], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-07 16:51:24.375 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-07 16:51:24.377 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-07 16:51:24.379 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 46.0304ms
2023-12-07 16:51:24.383 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:51:24.386 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:51:24.394 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:51:24.398 +03:00 [INF] ResponseBody: {"totalCount":5,"products":[{"id":"31ac1fe1-40e8-4da0-8e77-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:35.9224475","updatedDate":"0001-01-01T00:00:00"},{"id":"6b454482-a7f5-4df1-8e78-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.0197401","updatedDate":"0001-01-01T00:00:00"},{"id":"5ef46363-6c22-4afa-8e79-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.5511597","updatedDate":"0001-01-01T00:00:00"},{"id":"7b800c27-ee91-4f6f-8e7a-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:39.0484291","updatedDate":"0001-01-01T00:00:00"},{"id":"907e1c37-3e28-40f4-8e7b-08dbf29605be","name":"dbkjvkaj a","price":6516,"stock":5546,"createdDate":"2023-12-01T21:01:53.9948844","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-07 16:51:24.398 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-07 16:51:24.400 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 90.9153ms
2023-12-07 16:51:24.401 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:51:24.403 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:51:24.406 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-07 16:51:24.413 +03:00 [INF] Get All Products
2023-12-07 16:51:24.415 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-07 16:51:24.419 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[Name], [p].[Price], [p].[Stock], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-07 16:51:24.426 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-07 16:51:24.429 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-07 16:51:24.430 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 17.7643ms
2023-12-07 16:51:24.432 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:51:24.433 +03:00 [INF] ResponseBody: {"totalCount":5,"products":[{"id":"31ac1fe1-40e8-4da0-8e77-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:35.9224475","updatedDate":"0001-01-01T00:00:00"},{"id":"6b454482-a7f5-4df1-8e78-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.0197401","updatedDate":"0001-01-01T00:00:00"},{"id":"5ef46363-6c22-4afa-8e79-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.5511597","updatedDate":"0001-01-01T00:00:00"},{"id":"7b800c27-ee91-4f6f-8e7a-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:39.0484291","updatedDate":"0001-01-01T00:00:00"},{"id":"907e1c37-3e28-40f4-8e7b-08dbf29605be","name":"dbkjvkaj a","price":6516,"stock":5546,"createdDate":"2023-12-01T21:01:53.9948844","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-07 16:51:24.434 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 51.5017ms
2023-12-07 16:53:22.909 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/products - -
2023-12-07 16:53:22.915 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:53:22.916 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/products - - - 204 - - 6.9487ms
2023-12-07 16:53:22.920 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7113/api/products application/json 38
2023-12-07 16:53:22.921 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:53:22.923 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 38
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-07 16:53:22.924 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:53:22.926 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-07 16:53:22.929 +03:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-07 16:53:22.933 +03:00 [INF] RequestBody: {"name":"Urun125","stock":1,"price":1}
2023-12-07 16:53:23.080 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([ID], [CreatedDate], [Name], [Price], [Stock], [UpdatedDate])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2023-12-07 16:53:23.089 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2023-12-07 16:53:23.091 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API) in 159.3857ms
2023-12-07 16:53:23.094 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-07 16:53:23.096 +03:00 [INF] Response:
StatusCode: 201
2023-12-07 16:53:23.097 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7113/api/products application/json 38 - 201 0 - 177.0564ms
2023-12-07 16:53:23.104 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:53:23.105 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:53:23.106 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - - - 204 - - 1.7114ms
2023-12-07 16:53:23.109 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:53:23.110 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:53:23.111 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-07 16:53:23.112 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:53:23.113 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:53:23.114 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-07 16:53:23.116 +03:00 [INF] Get All Products
2023-12-07 16:53:23.118 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-07 16:53:23.121 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[Name], [p].[Price], [p].[Stock], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-07 16:53:23.124 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-07 16:53:23.126 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-07 16:53:23.128 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 11.612ms
2023-12-07 16:53:23.130 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:53:23.131 +03:00 [INF] ResponseBody: {"totalCount":6,"products":[{"id":"31ac1fe1-40e8-4da0-8e77-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:35.9224475","updatedDate":"0001-01-01T00:00:00"},{"id":"6b454482-a7f5-4df1-8e78-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.0197401","updatedDate":"0001-01-01T00:00:00"},{"id":"5ef46363-6c22-4afa-8e79-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.5511597","updatedDate":"0001-01-01T00:00:00"},{"id":"7b800c27-ee91-4f6f-8e7a-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:39.0484291","updatedDate":"0001-01-01T00:00:00"},{"id":"907e1c37-3e28-40f4-8e7b-08dbf29605be","name":"dbkjvkaj a","price":6516,"stock":5546,"createdDate":"2023-12-01T21:01:53.9948844","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-07 16:53:23.132 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 23.1416ms
2023-12-07 16:53:45.108 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/products - -
2023-12-07 16:53:45.113 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:53:45.114 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/products - - - 204 - - 6.2576ms
2023-12-07 16:53:45.118 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7113/api/products application/json 38
2023-12-07 16:53:45.119 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:53:45.121 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 38
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-07 16:53:45.122 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:53:45.123 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-07 16:53:45.124 +03:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-07 16:53:45.125 +03:00 [INF] RequestBody: {"name":"Urun125","stock":1,"price":1}
2023-12-07 16:53:45.146 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([ID], [CreatedDate], [Name], [Price], [Stock], [UpdatedDate])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2023-12-07 16:53:45.154 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2023-12-07 16:53:45.156 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API) in 30.1651ms
2023-12-07 16:53:45.157 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-07 16:53:45.159 +03:00 [INF] Response:
StatusCode: 201
2023-12-07 16:53:45.160 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7113/api/products application/json 38 - 201 0 - 41.9720ms
2023-12-07 16:53:45.164 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:53:45.165 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:53:45.166 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/products?page=0&size=5 - - - 204 - - 1.4454ms
2023-12-07 16:53:45.167 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - -
2023-12-07 16:53:45.168 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:53:45.169 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-07 16:53:45.171 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:53:45.173 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:53:45.175 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-07 16:53:45.177 +03:00 [INF] Get All Products
2023-12-07 16:53:45.179 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-07 16:53:45.182 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[Name], [p].[Price], [p].[Stock], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-07 16:53:45.185 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-07 16:53:45.187 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-07 16:53:45.189 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 12.082ms
2023-12-07 16:53:45.192 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:53:45.194 +03:00 [INF] ResponseBody: {"totalCount":7,"products":[{"id":"31ac1fe1-40e8-4da0-8e77-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:35.9224475","updatedDate":"0001-01-01T00:00:00"},{"id":"6b454482-a7f5-4df1-8e78-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.0197401","updatedDate":"0001-01-01T00:00:00"},{"id":"5ef46363-6c22-4afa-8e79-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:38.5511597","updatedDate":"0001-01-01T00:00:00"},{"id":"7b800c27-ee91-4f6f-8e7a-08dbf29605be","name":"","price":0,"stock":0,"createdDate":"2023-12-01T20:50:39.0484291","updatedDate":"0001-01-01T00:00:00"},{"id":"907e1c37-3e28-40f4-8e7b-08dbf29605be","name":"dbkjvkaj a","price":6516,"stock":5546,"createdDate":"2023-12-01T21:01:53.9948844","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-07 16:53:45.196 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7113/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 28.8490ms
2023-12-07 16:53:50.421 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/products?page=1&size=5 - -
2023-12-07 16:53:50.422 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:53:50.423 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/products?page=1&size=5 - - - 204 - - 2.8316ms
2023-12-07 16:53:50.425 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7113/api/products?page=1&size=5 - -
2023-12-07 16:53:50.426 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:53:50.427 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-07 16:53:50.428 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:53:50.429 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:53:50.431 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-07 16:53:50.434 +03:00 [INF] Get All Products
2023-12-07 16:53:50.435 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-07 16:53:50.439 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-07 16:53:50.439 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-07 16:53:50.443 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[Name], [p].[Price], [p].[Stock], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
2023-12-07 16:53:50.446 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-07 16:53:50.447 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-07 16:53:50.449 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 15.9877ms
2023-12-07 16:53:50.452 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:53:50.453 +03:00 [INF] ResponseBody: {"totalCount":7,"products":[{"id":"fa8f0b52-46e4-4ed5-07d7-08dbf72be0c7","name":"Urun125","price":1,"stock":1,"createdDate":"2023-12-07T16:53:23.0492199","updatedDate":"0001-01-01T00:00:00"},{"id":"20a77d2c-59d5-4605-07d8-08dbf72be0c7","name":"Urun125","price":1,"stock":1,"createdDate":"2023-12-07T16:53:45.1305866","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-07 16:53:50.454 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7113/api/products?page=1&size=5 - - - 200 - application/json;+charset=utf-8 29.4492ms
2023-12-07 16:54:01.735 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/products - -
2023-12-07 16:54:01.736 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:54:01.738 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/products - - - 204 - - 3.8528ms
2023-12-07 16:54:01.740 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7113/api/products application/json 38
2023-12-07 16:54:01.741 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:54:01.742 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 38
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-07 16:54:01.744 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:54:01.745 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-07 16:54:01.745 +03:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-07 16:54:01.747 +03:00 [INF] RequestBody: {"name":"Urun125","stock":1,"price":1}
2023-12-07 16:54:01.750 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([ID], [CreatedDate], [Name], [Price], [Stock], [UpdatedDate])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2023-12-07 16:54:01.753 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2023-12-07 16:54:01.754 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API) in 7.2368ms
2023-12-07 16:54:01.755 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-07 16:54:01.756 +03:00 [INF] Response:
StatusCode: 201
2023-12-07 16:54:01.758 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7113/api/products application/json 38 - 201 0 - 17.7951ms
2023-12-07 16:54:01.762 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7113/api/products?page=1&size=5 - -
2023-12-07 16:54:01.763 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:54:01.764 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7113/api/products?page=1&size=5 - - - 204 - - 1.7036ms
2023-12-07 16:54:01.765 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7113/api/products?page=1&size=5 - -
2023-12-07 16:54:01.766 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:54:01.766 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7113
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr,en;q=0.9,en-GB;q=0.8,en-US;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Microsoft Edge";v="119", "Chromium";v="119", "Not?A_Brand";v="24"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2023-12-07 16:54:01.767 +03:00 [INF] CORS policy execution successful.
2023-12-07 16:54:01.768 +03:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:54:01.770 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-07 16:54:01.773 +03:00 [INF] Get All Products
2023-12-07 16:54:01.775 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-07 16:54:01.777 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ID], [p].[Name], [p].[Price], [p].[Stock], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
2023-12-07 16:54:01.779 +03:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-07 16:54:01.780 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-07 16:54:01.781 +03:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 8.4729ms
2023-12-07 16:54:01.783 +03:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-07 16:54:01.784 +03:00 [INF] ResponseBody: {"totalCount":8,"products":[{"id":"fa8f0b52-46e4-4ed5-07d7-08dbf72be0c7","name":"Urun125","price":1,"stock":1,"createdDate":"2023-12-07T16:53:23.0492199","updatedDate":"0001-01-01T00:00:00"},{"id":"20a77d2c-59d5-4605-07d8-08dbf72be0c7","name":"Urun125","price":1,"stock":1,"createdDate":"2023-12-07T16:53:45.1305866","updatedDate":"0001-01-01T00:00:00"},{"id":"76e326da-0b00-4f8f-07d9-08dbf72be0c7","name":"Urun125","price":1,"stock":1,"createdDate":"2023-12-07T16:54:01.7488607","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-07 16:54:01.785 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7113/api/products?page=1&size=5 - - - 200 - application/json;+charset=utf-8 19.6730ms
